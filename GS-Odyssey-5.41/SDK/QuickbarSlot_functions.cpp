#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuickbarSlot

#include "Basic.hpp"

#include "QuickbarSlot_classes.hpp"
#include "QuickbarSlot_parameters.hpp"


namespace SDK
{

// Function QuickbarSlot.QuickbarSlot_C.ExecuteUbergraph_QuickbarSlot
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuickbarSlot_C::ExecuteUbergraph_QuickbarSlot(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "ExecuteUbergraph_QuickbarSlot");

	Params::QuickbarSlot_C_ExecuteUbergraph_QuickbarSlot Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuickbarSlot.QuickbarSlot_C.SetSlotSelected
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSelected                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UQuickbarSlot_C::SetSlotSelected(bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "SetSlotSelected");

	Params::QuickbarSlot_C_SetSlotSelected Parms{};

	Parms.bSelected = bSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuickbarSlot.QuickbarSlot_C.MinimizeSlot
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldSkipAnimation                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UQuickbarSlot_C::MinimizeSlot(bool bShouldSkipAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "MinimizeSlot");

	Params::QuickbarSlot_C_MinimizeSlot Parms{};

	Parms.bShouldSkipAnimation = bShouldSkipAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuickbarSlot.QuickbarSlot_C.MaximizeSlot
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldSkipAnimation                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UQuickbarSlot_C::MaximizeSlot(bool bShouldSkipAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "MaximizeSlot");

	Params::QuickbarSlot_C_MaximizeSlot Parms{};

	Parms.bShouldSkipAnimation = bShouldSkipAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuickbarSlot.QuickbarSlot_C.SetAnimatedBoxScaleFactor
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Param_AnimatedBoxScaleFactor                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuickbarSlot_C::SetAnimatedBoxScaleFactor(float Param_AnimatedBoxScaleFactor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "SetAnimatedBoxScaleFactor");

	Params::QuickbarSlot_C_SetAnimatedBoxScaleFactor Parms{};

	Parms.Param_AnimatedBoxScaleFactor = Param_AnimatedBoxScaleFactor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuickbarSlot.QuickbarSlot_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UQuickbarSlot_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "PreConstruct");

	Params::QuickbarSlot_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuickbarSlot.QuickbarSlot_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UQuickbarSlot_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickbarSlot.QuickbarSlot_C.HandleMinimizeStarted
// (BlueprintCallable, BlueprintEvent)

void UQuickbarSlot_C::HandleMinimizeStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "HandleMinimizeStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickbarSlot.QuickbarSlot_C.HandleMaximizeFinished
// (BlueprintCallable, BlueprintEvent)

void UQuickbarSlot_C::HandleMaximizeFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "HandleMaximizeFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickbarSlot.QuickbarSlot_C.HandleMinimizeFinished
// (BlueprintCallable, BlueprintEvent)

void UQuickbarSlot_C::HandleMinimizeFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "HandleMinimizeFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickbarSlot.QuickbarSlot_C.HandleMaximizeStarted
// (BlueprintCallable, BlueprintEvent)

void UQuickbarSlot_C::HandleMaximizeStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "HandleMaximizeStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickbarSlot.QuickbarSlot_C.InitializeCooldowns
// (Public, BlueprintCallable, BlueprintEvent)

void UQuickbarSlot_C::InitializeCooldowns()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "InitializeCooldowns");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickbarSlot.QuickbarSlot_C.OnCooldownStarted
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFortItemCooldownType                   CooldownType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuickbarSlot_C::OnCooldownStarted(EFortItemCooldownType CooldownType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "OnCooldownStarted");

	Params::QuickbarSlot_C_OnCooldownStarted Parms{};

	Parms.CooldownType = CooldownType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuickbarSlot.QuickbarSlot_C.OnCooldownStopped
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFortItemCooldownType                   CooldownType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuickbarSlot_C::OnCooldownStopped(EFortItemCooldownType CooldownType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "OnCooldownStopped");

	Params::QuickbarSlot_C_OnCooldownStopped Parms{};

	Parms.CooldownType = CooldownType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuickbarSlot.QuickbarSlot_C.UpdateItemBoxSize
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UQuickbarSlot_C::UpdateItemBoxSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "UpdateItemBoxSize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickbarSlot.QuickbarSlot_C.InitializeInvalidation
// (Public, BlueprintCallable, BlueprintEvent)

void UQuickbarSlot_C::InitializeInvalidation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "InitializeInvalidation");

	UObject::ProcessEvent(Func, nullptr);
}

}

