#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EliminatedOverlay

#include "Basic.hpp"

#include "EliminatedOverlay_classes.hpp"
#include "EliminatedOverlay_parameters.hpp"


namespace SDK
{

// Function EliminatedOverlay.EliminatedOverlay_C.ExecuteUbergraph_EliminatedOverlay
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UEliminatedOverlay_C::ExecuteUbergraph_EliminatedOverlay(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "ExecuteUbergraph_EliminatedOverlay");

	Params::EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EliminatedOverlay.EliminatedOverlay_C.WinnerSwapComplete
// (BlueprintCallable, BlueprintEvent)

void UEliminatedOverlay_C::WinnerSwapComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "WinnerSwapComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EliminatedOverlay.EliminatedOverlay_C.EventUpdateMultiWinner
// (BlueprintCallable, BlueprintEvent)

void UEliminatedOverlay_C::EventUpdateMultiWinner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "EventUpdateMultiWinner");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EliminatedOverlay.EliminatedOverlay_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UEliminatedOverlay_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EliminatedOverlay.EliminatedOverlay_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UEliminatedOverlay_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "Tick");

	Params::EliminatedOverlay_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EliminatedOverlay.EliminatedOverlay_C.OnPawnDied
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFortPlayerDeathReport           Param_DeathReport                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UEliminatedOverlay_C::OnPawnDied(struct FFortPlayerDeathReport& Param_DeathReport)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "OnPawnDied");

	Params::EliminatedOverlay_C_OnPawnDied Parms{};

	Parms.Param_DeathReport = std::move(Param_DeathReport);

	UObject::ProcessEvent(Func, &Parms);

	Param_DeathReport = std::move(Parms.Param_DeathReport);
}


// Function EliminatedOverlay.EliminatedOverlay_C.UpdatePlace
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UEliminatedOverlay_C::UpdatePlace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "UpdatePlace");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EliminatedOverlay.EliminatedOverlay_C.UpdateViewTarget
// (Public, BlueprintCallable, BlueprintEvent)

void UEliminatedOverlay_C::UpdateViewTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "UpdateViewTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EliminatedOverlay.EliminatedOverlay_C.HideExtraStuffForSpectating
// (Public, BlueprintCallable, BlueprintEvent)

void UEliminatedOverlay_C::HideExtraStuffForSpectating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "HideExtraStuffForSpectating");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EliminatedOverlay.EliminatedOverlay_C.Winner Announced
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           InString                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UEliminatedOverlay_C::Winner_Announced(const class FString& InString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "Winner Announced");

	Params::EliminatedOverlay_C_Winner_Announced Parms{};

	Parms.InString = std::move(InString);

	UObject::ProcessEvent(Func, &Parms);
}


// Function EliminatedOverlay.EliminatedOverlay_C.UpdateYouPlacedBoxVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void UEliminatedOverlay_C::UpdateYouPlacedBoxVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "UpdateYouPlacedBoxVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EliminatedOverlay.EliminatedOverlay_C.OnKillFeedUpdated
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UEliminatedOverlay_C::OnKillFeedUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "OnKillFeedUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EliminatedOverlay.EliminatedOverlay_C.ProcessDeathReport
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFortPlayerDeathReport           FortPlayerDeathReport                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    DidPlayerKillThemselves                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             KillerName                                             (Parm, OutParm)

void UEliminatedOverlay_C::ProcessDeathReport(struct FFortPlayerDeathReport& FortPlayerDeathReport, bool* DidPlayerKillThemselves, class FText* KillerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "ProcessDeathReport");

	Params::EliminatedOverlay_C_ProcessDeathReport Parms{};

	Parms.FortPlayerDeathReport = std::move(FortPlayerDeathReport);

	UObject::ProcessEvent(Func, &Parms);

	FortPlayerDeathReport = std::move(Parms.FortPlayerDeathReport);

	if (DidPlayerKillThemselves != nullptr)
		*DidPlayerKillThemselves = Parms.DidPlayerKillThemselves;

	if (KillerName != nullptr)
		*KillerName = std::move(Parms.KillerName);
}


// Function EliminatedOverlay.EliminatedOverlay_C.SetBannerForKiller
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFortPlayerDeathReport           FortPlayerDeathReport                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UEliminatedOverlay_C::SetBannerForKiller(struct FFortPlayerDeathReport& FortPlayerDeathReport)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "SetBannerForKiller");

	Params::EliminatedOverlay_C_SetBannerForKiller Parms{};

	Parms.FortPlayerDeathReport = std::move(FortPlayerDeathReport);

	UObject::ProcessEvent(Func, &Parms);

	FortPlayerDeathReport = std::move(Parms.FortPlayerDeathReport);
}


// Function EliminatedOverlay.EliminatedOverlay_C.StreamingLoadingChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bLoading                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UEliminatedOverlay_C::StreamingLoadingChanged(bool bLoading)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "StreamingLoadingChanged");

	Params::EliminatedOverlay_C_StreamingLoadingChanged Parms{};

	Parms.bLoading = bLoading;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EliminatedOverlay.EliminatedOverlay_C.Winning Score Determined
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Score                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UEliminatedOverlay_C::Winning_Score_Determined(int32 Score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "Winning Score Determined");

	Params::EliminatedOverlay_C_Winning_Score_Determined Parms{};

	Parms.Score = Score;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EliminatedOverlay.EliminatedOverlay_C.OnPlayerLost
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EEndOfMatchReason                       LostReason                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UEliminatedOverlay_C::OnPlayerLost(EEndOfMatchReason LostReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "OnPlayerLost");

	Params::EliminatedOverlay_C_OnPlayerLost Parms{};

	Parms.LostReason = LostReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EliminatedOverlay.EliminatedOverlay_C.UpdatePlayerLost
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UEliminatedOverlay_C::UpdatePlayerLost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "UpdatePlayerLost");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EliminatedOverlay.EliminatedOverlay_C.UpdateMultiwinner
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UEliminatedOverlay_C::UpdateMultiwinner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "UpdateMultiwinner");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EliminatedOverlay.EliminatedOverlay_C.GetMultiwinnerIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RequestedPosition                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ValidatedPosition                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UEliminatedOverlay_C::GetMultiwinnerIndex(int32 RequestedPosition, int32* ValidatedPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "GetMultiwinnerIndex");

	Params::EliminatedOverlay_C_GetMultiwinnerIndex Parms{};

	Parms.RequestedPosition = RequestedPosition;

	UObject::ProcessEvent(Func, &Parms);

	if (ValidatedPosition != nullptr)
		*ValidatedPosition = Parms.ValidatedPosition;
}


// Function EliminatedOverlay.EliminatedOverlay_C.HideWinnerAnnouncement
// (Public, BlueprintCallable, BlueprintEvent)

void UEliminatedOverlay_C::HideWinnerAnnouncement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "HideWinnerAnnouncement");

	UObject::ProcessEvent(Func, nullptr);
}

}

