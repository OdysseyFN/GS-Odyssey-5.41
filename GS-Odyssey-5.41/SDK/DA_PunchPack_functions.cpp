#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DA_PunchPack

#include "Basic.hpp"

#include "DA_PunchPack_classes.hpp"
#include "DA_PunchPack_parameters.hpp"


namespace SDK
{

// Function DA_PunchPack.DA_PunchPack_C.ExecuteUbergraph_DA_PunchPack
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADA_PunchPack_C::ExecuteUbergraph_DA_PunchPack(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DA_PunchPack_C", "ExecuteUbergraph_DA_PunchPack");

	Params::DA_PunchPack_C_ExecuteUbergraph_DA_PunchPack Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DA_PunchPack.DA_PunchPack_C.BPPressTrigger
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortDecoHelper*                  FortDecoHelper                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADA_PunchPack_C::BPPressTrigger(class AFortDecoHelper* FortDecoHelper)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DA_PunchPack_C", "BPPressTrigger");

	Params::DA_PunchPack_C_BPPressTrigger Parms{};

	Parms.FortDecoHelper = FortDecoHelper;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DA_PunchPack.DA_PunchPack_C.BPOnUnEquip
// (Event, Public, BlueprintEvent)

void ADA_PunchPack_C::BPOnUnEquip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DA_PunchPack_C", "BPOnUnEquip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DA_PunchPack.DA_PunchPack_C.MinHeldTimeCheck
// (BlueprintCallable, BlueprintEvent)

void ADA_PunchPack_C::MinHeldTimeCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DA_PunchPack_C", "MinHeldTimeCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DA_PunchPack.DA_PunchPack_C.BPReleaseSecondaryFire
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortDecoHelper*                  FortDecoHelper                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADA_PunchPack_C::BPReleaseSecondaryFire(class AFortDecoHelper* FortDecoHelper)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DA_PunchPack_C", "BPReleaseSecondaryFire");

	Params::DA_PunchPack_C_BPReleaseSecondaryFire Parms{};

	Parms.FortDecoHelper = FortDecoHelper;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DA_PunchPack.DA_PunchPack_C.BPPressSecondaryFire
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortDecoHelper*                  FortDecoHelper                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADA_PunchPack_C::BPPressSecondaryFire(class AFortDecoHelper* FortDecoHelper)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DA_PunchPack_C", "BPPressSecondaryFire");

	Params::DA_PunchPack_C_BPPressSecondaryFire Parms{};

	Parms.FortDecoHelper = FortDecoHelper;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DA_PunchPack.DA_PunchPack_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ADA_PunchPack_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DA_PunchPack_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DA_PunchPack.DA_PunchPack_C.RaiseUsageError
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTagContainer            FailedReason                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ADA_PunchPack_C::RaiseUsageError(const struct FGameplayTagContainer& FailedReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DA_PunchPack_C", "RaiseUsageError");

	Params::DA_PunchPack_C_RaiseUsageError Parms{};

	Parms.FailedReason = std::move(FailedReason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DA_PunchPack.DA_PunchPack_C.IsOnGround
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bOnGround                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ADA_PunchPack_C::IsOnGround(bool* bOnGround)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DA_PunchPack_C", "IsOnGround");

	Params::DA_PunchPack_C_IsOnGround Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bOnGround != nullptr)
		*bOnGround = Parms.bOnGround;
}

}

