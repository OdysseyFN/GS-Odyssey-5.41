#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DefaultSkillNode

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "SkillTreePages_structs.hpp"
#include "SkillTreeGroups_structs.hpp"
#include "SkillTreepAGEColors_structs.hpp"
#include "SkillTreeGroupColors_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass DefaultSkillNode.DefaultSkillNode_C
// 0x0158 (0x0A10 - 0x08B8)
class UDefaultSkillNode_C final : public UFortSkillTreeCanvasNode
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x08B8(0x0008)(Transient, DuplicateTransient)
	class UImage*                                 GlowOverlay;                                       // 0x08C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                InternalSpacer;                                    // 0x08C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SelectionPulseEffect;                              // 0x08D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         SelectionGlowPercentage;                           // 0x08D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HoverGlowPercentage;                               // 0x08DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           HoverGlowTimerHandle;                              // 0x08E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           SelectionGlowTimerHandle;                          // 0x08E8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FSkillTreePageColors                   PageColors;                                        // 0x08F0(0x00C0)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	ESkillTreePages                               Pages;                                             // 0x09B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D15[0x3];                                     // 0x09B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillTreeGroupColors                  GroupColors;                                       // 0x09B4(0x0054)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	ESkillTreeGroups                              Groups;                                            // 0x0A08(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_DefaultSkillNode(int32 EntryPoint);
	void BP_OnDeselected();
	void BP_OnSelected();
	void BP_OnHovered();
	void BP_OnUnhovered();
	void PreConstruct(bool IsDesignTime);
	void HandleSkillTreeNodeStateChanged();
	void Construct();
	void UpdateFromNodeState();
	void UpdateFromNodeData();
	void StepHoverGlowInterpolation();
	void StepSelectionGlowInterpolation();
	void UpdateHoverGlow();
	void UpdateSelectionGlow();
	void UpdateFromButtonState();
	void SetBackgroundColor();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DefaultSkillNode_C">();
	}
	static class UDefaultSkillNode_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDefaultSkillNode_C>();
	}
};

}

