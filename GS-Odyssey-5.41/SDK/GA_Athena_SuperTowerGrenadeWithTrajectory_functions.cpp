#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_SuperTowerGrenadeWithTrajectory

#include "Basic.hpp"

#include "GA_Athena_SuperTowerGrenadeWithTrajectory_classes.hpp"
#include "GA_Athena_SuperTowerGrenadeWithTrajectory_parameters.hpp"


namespace SDK
{

// Function GA_Athena_SuperTowerGrenadeWithTrajectory.GA_Athena_SuperTowerGrenadeWithTrajectory_C.ExecuteUbergraph_GA_Athena_SuperTowerGrenadeWithTrajectory
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Athena_SuperTowerGrenadeWithTrajectory_C::ExecuteUbergraph_GA_Athena_SuperTowerGrenadeWithTrajectory(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Athena_SuperTowerGrenadeWithTrajectory_C", "ExecuteUbergraph_GA_Athena_SuperTowerGrenadeWithTrajectory");

	Params::GA_Athena_SuperTowerGrenadeWithTrajectory_C_ExecuteUbergraph_GA_Athena_SuperTowerGrenadeWithTrajectory Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Athena_SuperTowerGrenadeWithTrajectory.GA_Athena_SuperTowerGrenadeWithTrajectory_C.CleanupTrajectoryDisplay
// (BlueprintCallable, BlueprintEvent)

void UGA_Athena_SuperTowerGrenadeWithTrajectory_C::CleanupTrajectoryDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Athena_SuperTowerGrenadeWithTrajectory_C", "CleanupTrajectoryDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Athena_SuperTowerGrenadeWithTrajectory.GA_Athena_SuperTowerGrenadeWithTrajectory_C.SetupDummyProjectileRed
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UGA_Athena_SuperTowerGrenadeWithTrajectory_C::SetupDummyProjectileRed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Athena_SuperTowerGrenadeWithTrajectory_C", "SetupDummyProjectileRed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Athena_SuperTowerGrenadeWithTrajectory.GA_Athena_SuperTowerGrenadeWithTrajectory_C.UpdateTrajectorySpline
// (Public, BlueprintCallable, BlueprintEvent)

void UGA_Athena_SuperTowerGrenadeWithTrajectory_C::UpdateTrajectorySpline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Athena_SuperTowerGrenadeWithTrajectory_C", "UpdateTrajectorySpline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Athena_SuperTowerGrenadeWithTrajectory.GA_Athena_SuperTowerGrenadeWithTrajectory_C.Server_SpawnProjectile
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void UGA_Athena_SuperTowerGrenadeWithTrajectory_C::Server_SpawnProjectile(const struct FVector& Location, const struct FRotator& Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Athena_SuperTowerGrenadeWithTrajectory_C", "Server_SpawnProjectile");

	Params::GA_Athena_SuperTowerGrenadeWithTrajectory_C_Server_SpawnProjectile Parms{};

	Parms.Location = std::move(Location);
	Parms.Direction = std::move(Direction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Athena_SuperTowerGrenadeWithTrajectory.GA_Athena_SuperTowerGrenadeWithTrajectory_C.K2_ActivateAbility
// (Event, Protected, BlueprintEvent)

void UGA_Athena_SuperTowerGrenadeWithTrajectory_C::K2_ActivateAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Athena_SuperTowerGrenadeWithTrajectory_C", "K2_ActivateAbility");

	UObject::ProcessEvent(Func, nullptr);
}

}

