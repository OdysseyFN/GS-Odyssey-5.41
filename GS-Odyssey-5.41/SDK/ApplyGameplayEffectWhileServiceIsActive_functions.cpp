#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ApplyGameplayEffectWhileServiceIsActive

#include "Basic.hpp"

#include "ApplyGameplayEffectWhileServiceIsActive_classes.hpp"
#include "ApplyGameplayEffectWhileServiceIsActive_parameters.hpp"


namespace SDK
{

// Function ApplyGameplayEffectWhileServiceIsActive.ApplyGameplayEffectWhileServiceIsActive_C.ExecuteUbergraph_ApplyGameplayEffectWhileServiceIsActive
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UApplyGameplayEffectWhileServiceIsActive_C::ExecuteUbergraph_ApplyGameplayEffectWhileServiceIsActive(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ApplyGameplayEffectWhileServiceIsActive_C", "ExecuteUbergraph_ApplyGameplayEffectWhileServiceIsActive");

	Params::ApplyGameplayEffectWhileServiceIsActive_C_ExecuteUbergraph_ApplyGameplayEffectWhileServiceIsActive Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ApplyGameplayEffectWhileServiceIsActive.ApplyGameplayEffectWhileServiceIsActive_C.ReceiveTick
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           OwnerActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UApplyGameplayEffectWhileServiceIsActive_C::ReceiveTick(class AActor* OwnerActor, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ApplyGameplayEffectWhileServiceIsActive_C", "ReceiveTick");

	Params::ApplyGameplayEffectWhileServiceIsActive_C_ReceiveTick Parms{};

	Parms.OwnerActor = OwnerActor;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ApplyGameplayEffectWhileServiceIsActive.ApplyGameplayEffectWhileServiceIsActive_C.ReceiveActivation
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           OwnerActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UApplyGameplayEffectWhileServiceIsActive_C::ReceiveActivation(class AActor* OwnerActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ApplyGameplayEffectWhileServiceIsActive_C", "ReceiveActivation");

	Params::ApplyGameplayEffectWhileServiceIsActive_C_ReceiveActivation Parms{};

	Parms.OwnerActor = OwnerActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ApplyGameplayEffectWhileServiceIsActive.ApplyGameplayEffectWhileServiceIsActive_C.ReceiveDeactivation
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           OwnerActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UApplyGameplayEffectWhileServiceIsActive_C::ReceiveDeactivation(class AActor* OwnerActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ApplyGameplayEffectWhileServiceIsActive_C", "ReceiveDeactivation");

	Params::ApplyGameplayEffectWhileServiceIsActive_C_ReceiveDeactivation Parms{};

	Parms.OwnerActor = OwnerActor;

	UObject::ProcessEvent(Func, &Parms);
}

}

