#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Button_Shoot

#include "Basic.hpp"

#include "Button_Shoot_classes.hpp"
#include "Button_Shoot_parameters.hpp"


namespace SDK
{

// Function Button_Shoot.Button_Shoot_C.ExecuteUbergraph_Button_Shoot
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UButton_Shoot_C::ExecuteUbergraph_Button_Shoot(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Button_Shoot_C", "ExecuteUbergraph_Button_Shoot");

	Params::Button_Shoot_C_ExecuteUbergraph_Button_Shoot Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Button_Shoot.Button_Shoot_C.On Build Mode Changed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEntering                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UButton_Shoot_C::On_Build_Mode_Changed(bool bEntering)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Button_Shoot_C", "On Build Mode Changed");

	Params::Button_Shoot_C_On_Build_Mode_Changed Parms{};

	Parms.bEntering = bEntering;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Button_Shoot.Button_Shoot_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UButton_Shoot_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Button_Shoot_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Button_Shoot.Button_Shoot_C.OnTouchEnded
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    InTouchEvent                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UButton_Shoot_C::OnTouchEnded(const struct FGeometry& MyGeometry, const struct FPointerEvent& InTouchEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Button_Shoot_C", "OnTouchEnded");

	Params::Button_Shoot_C_OnTouchEnded Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InTouchEvent = std::move(InTouchEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Button_Shoot.Button_Shoot_C.OnTouchStarted
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    InTouchEvent                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UButton_Shoot_C::OnTouchStarted(const struct FGeometry& MyGeometry, const struct FPointerEvent& InTouchEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Button_Shoot_C", "OnTouchStarted");

	Params::Button_Shoot_C_OnTouchStarted Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InTouchEvent = std::move(InTouchEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Button_Shoot.Button_Shoot_C.HandleWeaponChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortWeapon*                      New_Weapon                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AFortWeapon*                      Previous_Weapon                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UButton_Shoot_C::HandleWeaponChanged(class AFortWeapon* New_Weapon, class AFortWeapon* Previous_Weapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Button_Shoot_C", "HandleWeaponChanged");

	Params::Button_Shoot_C_HandleWeaponChanged Parms{};

	Parms.New_Weapon = New_Weapon;
	Parms.Previous_Weapon = Previous_Weapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Button_Shoot.Button_Shoot_C.Check For Tag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTag                     TagToCheck                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    HasTag                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UButton_Shoot_C::Check_For_Tag(const struct FGameplayTag& TagToCheck, bool* HasTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Button_Shoot_C", "Check For Tag");

	Params::Button_Shoot_C_Check_For_Tag Parms{};

	Parms.TagToCheck = std::move(TagToCheck);

	UObject::ProcessEvent(Func, &Parms);

	if (HasTag != nullptr)
		*HasTag = Parms.HasTag;
}


// Function Button_Shoot.Button_Shoot_C.OnTouchMoved
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    InTouchEvent                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UButton_Shoot_C::OnTouchMoved(const struct FGeometry& MyGeometry, const struct FPointerEvent& InTouchEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Button_Shoot_C", "OnTouchMoved");

	Params::Button_Shoot_C_OnTouchMoved Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InTouchEvent = std::move(InTouchEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

